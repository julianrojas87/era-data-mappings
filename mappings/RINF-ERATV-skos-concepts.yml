prefixes:
  xsd: "http://www.w3.org/2001/XMLSchema#"
  rdfs: "http://www.w3.org/2000/01/rdf-schema#"
  skos: "http://www.w3.org/2004/02/skos/core#"
  idlab-fn: "http://example.com/idlab/function/"
  grel: "http://users.ugent.be/~bjdmeest/function/grel.ttl#"
  era: "http://era.europa.eu/ns#"
  era-lc: "http://era.europa.eu/concepts/load-capabilities#"
  era-gaugings: "http://era.europa.eu/concepts/gaugings#"
  era-ap: "http://era.europa.eu/concepts/axle-positions#"
  era-tds: "http://era.europa.eu/concepts/train-detection#"
  era-am: "http://era.europa.eu/concepts/axle-monitoring#"
  era-mscd: "http://era.europa.eu/concepts/max-speed-cant-deficiency#"
  era-ri: "http://era.europa.eu/concepts/rail-inclinations#"
  era-gcf: "http://era.europa.eu/concepts/gauge-changeover-facilities#"
  era-ebp: "http://era.europa.eu/concepts/emergency-braking-profiles#"
  era-bwp: "http://era.europa.eu/concepts/brake-weight-percentages#"
  era-tc: "http://era.europa.eu/concepts/thermal-capacity#"
  era-ic: "http://era.europa.eu/concepts/ice-conditions#"
  era-cls: "http://era.europa.eu/concepts/contact-line-systems#"
  era-ess: "http://era.europa.eu/concepts/energy-supply-systems#"
  era-pth: "http://era.europa.eu/concepts/pantograph-heads#"
  era-csm: "http://era.europa.eu/concepts/contact-strip-materials#"
  era-ph: "http://era.europa.eu/concepts/platform-heights#"
  era-gsmr: "http://era.europa.eu/concepts/gsmr-networks#"
  era-tpls: "http://era.europa.eu/concepts/train-protection-legacy-systems#"
  era-lrs: "http://era.europa.eu/concepts/legacy-radio-systems#"
variables:
  connection: 
    accessRinf: &hostRinf ${RINF_HOST}
    accessEratv: &hostEratv ${ERATV_HOST}
    type: &typeMSSQL mssql
    credentialsRinf: &credentialsRinf
      username: ${RINF_USER}
      password: ${RINF_PWD}
    credentialsEratv: &credentialsEratv
      username: ${ERATV_USER}
      password: ${ERATV_PWD}
    queryFormulation: &queryFormulation sql2008 
    referenceFormulation: &referenceFormulation csv

mappings:
  load-capability:
    sources:
      - access: *hostRinf
        type: *typeMSSQL
        credentials: *credentialsRinf
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT CONCAT(LookupValues.[Value], '-' , TrackParameters.Value) AS ParameterValue FROM RINF.dbo.TrackParameters, RINF.dbo.Parameters, RINF.dbo.SOLTracks, RINF.dbo.SectionOfLines, RINF.dbo.LookupValues WHERE SOLTracks.TrackID = TrackParameters.TrackID AND TrackParameters.ParameterId = Parameters.ID AND TrackParameters.LookupValueID = LookupValues.ID AND Parameters.[Index] IN ('1.1.1.1.2.4') AND SOLTracks.SectionOfLineID = SectionOfLines.ID AND SOLTracks.VersionID = SectionOfLines.VersionID;
    s: http://era.europa.eu/concepts/load-capabilities#$(ParameterValue)
    po:
      - [a, era-lc:LoadCapability]
      - [skos:prefLabel, $(ParameterValue)]

  gauging-profile-rinf:
    sources:
      - access: *hostRinf
        type: *typeMSSQL
        credentials: *credentialsRinf
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT LookupValues.[Value] FROM RINF.dbo.Parameters, RINF.dbo.LookupValues WHERE Parameters.[Index] IN ('1.1.1.1.3.1.1') AND Parameters.ID = LookupValues.ParameterId;
    s: http://era.europa.eu/concepts/gaugings#$(Value)
    po:
      - [a, era-gaugings:GaugingProfile]
      - [skos:prefLabel, $(Value)]

  gauging-profile-eratv:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.2.1'));
    s: http://era.europa.eu/concepts/gaugings#$(ParameterURI)
    po:
      - p: a 
        o: era-gaugings:GaugingProfile
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
      - p: skos:prefLabel
        o: $(ParameterValue)
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
  
  other-gauging-profile-eratv:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.2.1'));
    s: http://era.europa.eu/concepts/gaugings#$(OtherURI)
    po:
      - p: a 
        o: era-gaugings:GaugingProfile
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
      - p: skos:prefLabel
        o: $(OtherValue)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
  
  axle-positions:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT RegistrationParameters.Value AS ParameterValue, REPLACE(RegistrationParameters.Value, ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.3.4'));
    s: http://era.europa.eu/concepts/axle-positions#$(ParameterURI)
    po:
      - [a, era-ap:AxlePosition]
      - [skos:prefLabel, $(ParameterValue)]
  
  train-detection-system:
    sources:
      - access: *hostRinf
        type: *typeMSSQL
        credentials: *credentialsRinf
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT LookupValues.[Value] AS Label, REPLACE(LookupValues.[Value], ' ', '_') AS Value FROM RINF.dbo.Parameters, RINF.dbo.LookupValues WHERE Parameters.[Index] IN ('1.1.1.3.7.1.1') AND Parameters.ID = LookupValues.ParameterId;
    s: http://era.europa.eu/concepts/train-detection#$(Value)
    po:
      - [a, era-tds:TrainDetectionSystem]
      - [skos:prefLabel, $(Label)]
  
  axle-bearing-monitoring:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.9.2'));
    s: http://era.europa.eu/concepts/axle-monitoring#$(ParameterURI)
    po:
      - p: a 
        o: era-am:AxleBearingMonitoring
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
      - p: skos:prefLabel
        o: $(ParameterValue)
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
  
  other-axle-bearing-monitoring:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.9.2'));
    s: http://era.europa.eu/concepts/axle-monitoring#$(OtherURI)
    po:
      - [a, era-am:AxleBearingMonitoring]
      - p: skos:prefLabel
        o: $(OtherValue)
        condition:
          function: idlab-fn:notEqual
          parameters:
              - [grel:valueParameter, $(OtherValue)]
              - [grel:valueParameter2, ""]
  
  max-speed-cant-deficiency:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT RegistrationParameters.Value AS ParameterValue, REPLACE(RegistrationParameters.Value, ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.6.4'));
    s: http://era.europa.eu/concepts/max-speed-cant-deficiency#$(ParameterURI)
    po:
      - [a, era-mscd:MaxSpeedCantDeficiency]
      - [skos:prefLabel, $(ParameterValue)]

  rail-inclinations-eratv:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.6.5'));
    s: http://era.europa.eu/concepts/rail-inclinations#$(ParameterURI)
    po:
      - p: a 
        o: era-ri:RailInclination
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
      - p: skos:prefLabel
        o: $(ParameterValue)
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
  
  rail-inclinations-rinf:
    sources:
      - access: *hostRinf
        type: *typeMSSQL
        credentials: *credentialsRinf
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT TrackParameters.Value AS ParameterValue FROM RINF.dbo.TrackParameters, RINF.dbo.Parameters, RINF.dbo.SOLTracks, RINF.dbo.SectionOfLines WHERE SOLTracks.TrackID = TrackParameters.TrackID AND TrackParameters.ParameterId = Parameters.ID AND (TrackParameters.[Value] IS NOT NULL OR TrackParameters.LookupValueID IS NOT NULL) AND "Index" IN ('1.1.1.1.4.3') AND SOLTracks.SectionOfLineID = SectionOfLines.ID AND SOLTracks.VersionID = SectionOfLines.VersionID;
    s: era-ri:1%2F$(ParameterValue)
    po:
      - [a, era-ri:RailInclination]
      - [skos:prefLabel, "1/$(ParameterValue)"]
      
  other-rail-inclinations:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.6.5'));
    s: http://era.europa.eu/concepts/rail-inclinations#$(OtherURI)
    po:
      - [a, era-ri:RailInclination]
      - p: skos:prefLabel
        o: $(OtherValue)
        condition:
          function: idlab-fn:notEqual
          parameters:
              - [grel:valueParameter, $(OtherValue)]
              - [grel:valueParameter2, ""]

  gauge-changeover-facilities-eratv:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.11'));
    s: http://era.europa.eu/concepts/gauge-changeover-facilities#$(ParameterURI)
    po:
      - p: a 
        o: era-gcf:GaugeChangeoverFacility
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
      - p: skos:prefLabel
        o: $(ParameterValue)
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]

  other-gauge-changeover-facilities:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.11'));
    s: http://era.europa.eu/concepts/gauge-changeover-facilities#$(OtherURI)
    po:
      - [a, era-gcf:GaugeChangeoverFacility]
      - p: skos:prefLabel
        o: $(OtherValue)
        condition:
          function: idlab-fn:notEqual
          parameters:
              - [grel:valueParameter, $(OtherValue)]
              - [grel:valueParameter2, ""]
  
  emergency-braking-profiles:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT RegistrationParameters.Value AS ParameterValue, REPLACE(RegistrationParameters.Value, ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.5'));
    s: http://era.europa.eu/concepts/emergency-braking-profiles#$(ParameterURI)
    po:
      - [a, era-ebp:EmergencyBrakingProfile]
      - [skos:prefLabel, $(ParameterValue)]
  
  brake-weight-percentages:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT RegistrationParameters.Value AS ParameterValue, REPLACE(RegistrationParameters.Value, ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.6'));
    s: http://era.europa.eu/concepts/brake-weight-percentages#$(ParameterURI)
    po:
      - [a, era-bwp:BrakeWeightPercentage]
      - [skos:prefLabel, $(ParameterValue)]

  thermal-capacity-tsi:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue, REPLACE(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', '_') AS UriName FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.2.1.1'));
    s: http://era.europa.eu/concepts/thermal-capacity#$(UriName)
    po:
      - [a, era-tc:ThermalCapacityTSIReference]
      - [skos:prefLabel, $(ParameterValue)]
  
  snow-ice-hail-conditions:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.3.3'));
    s: http://era.europa.eu/concepts/ice-conditions#$(ParameterURI)
    po:
      - p: a 
        o: era-ic:IceCondition
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
      - p: skos:prefLabel
        o: $(ParameterValue)
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
  
  other-snow-ice-hail-conditions:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.3.3'));
    s: http://era.europa.eu/concepts/ice-conditions#$(OtherURI)
    po:
      - [a, era-ic:IceCondition]
      - p: skos:prefLabel
        o: $(OtherValue)
        condition:
          function: idlab-fn:notEqual
          parameters:
              - [grel:valueParameter, $(OtherValue)]
              - [grel:valueParameter2, ""]
  
  contact-line-systems:
    sources:
      - access: *hostRinf
        type: *typeMSSQL
        credentials: *credentialsRinf
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT CONCAT((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), TrackParameters.Value, '') AS ParameterValue, REPLACE(CONCAT((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), TrackParameters.Value, ''), ' ', '_') AS UriName FROM RINF.dbo.TrackParameters, RINF.dbo.Parameters, RINF.dbo.SOLTracks, RINF.dbo.SectionOfLines WHERE SOLTracks.TrackID = TrackParameters.TrackID AND TrackParameters.ParameterId = Parameters.ID AND (TrackParameters.[Value] IS NOT NULL OR TrackParameters.LookupValueID IS NOT NULL) AND "Index" IN ('1.1.1.2.2.1.1') AND SOLTracks.SectionOfLineID = SectionOfLines.ID AND SOLTracks.VersionID = SectionOfLines.VersionID;
    s: http://era.europa.eu/concepts/contact-line-systems#$(UriName)
    po:
      - [a, era-cls:ContactLineSystem]
      - [skos:prefLabel, $(ParameterValue)]
  
  energy-supply-systems-eratv:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.1'));
    s: http://era.europa.eu/concepts/energy-supply-systems#$(ParameterURI)
    po:
      - p: a 
        o: era-ess:EnergySupplySystem
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
      - p: skos:prefLabel
        o: $(ParameterValue)
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
  
  energy-supply-systems-rinf:
    sources:
      - access: *hostRinf
        type: *typeMSSQL
        credentials: *credentialsRinf
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID) AS ParameterValue, REPLACE((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), ' ', '_') AS ParameterURI FROM RINF.dbo.TrackParameters, RINF.dbo.Parameters, RINF.dbo.SOLTracks, RINF.dbo.SectionOfLines WHERE SOLTracks.TrackID = TrackParameters.TrackID AND TrackParameters.ParameterId = Parameters.ID AND (TrackParameters.[Value] IS NOT NULL OR TrackParameters.LookupValueID IS NOT NULL) AND "Index" IN ('1.1.1.2.2.1.2') AND SOLTracks.SectionOfLineID = SectionOfLines.ID AND SOLTracks.VersionID = SectionOfLines.VersionID;
    s: http://era.europa.eu/concepts/energy-supply-systems#$(ParameterURI)
    po:
      - p: a 
        o: era-ess:EnergySupplySystem
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "other"]
      - p: skos:prefLabel
        o: $(ParameterValue)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "other"]
      
  other-energy-supply-systems-eratv:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.1'));
    s: http://era.europa.eu/concepts/energy-supply-systems#$(OtherURI)
    po:
      - [a, era-ess:EnergySupplySystem]
      - p: skos:prefLabel
        o: $(OtherValue)
        condition:
          function: idlab-fn:notEqual
          parameters:
              - [grel:valueParameter, $(OtherValue)]
              - [grel:valueParameter2, ""]
  
  tsi-pantograph-heads:
    sources:
      - access: *hostRinf
        type: *typeMSSQL
        credentials: *credentialsRinf
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT CONCAT((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), TrackParameters.Value, '') AS ParameterValue, REPLACE(CONCAT((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), TrackParameters.Value, ''), ' ', '_') AS UriName FROM RINF.dbo.TrackParameters, RINF.dbo.Parameters, RINF.dbo.SOLTracks, RINF.dbo.SectionOfLines WHERE SOLTracks.TrackID = TrackParameters.TrackID AND TrackParameters.ParameterId = Parameters.ID AND (TrackParameters.[Value] IS NOT NULL OR TrackParameters.LookupValueID IS NOT NULL) AND "Index" IN ('1.1.1.2.3.1') AND SOLTracks.SectionOfLineID = SectionOfLines.ID AND SOLTracks.VersionID = SectionOfLines.VersionID;
    s: era-pth:$(UriName)
    po:
      - [a, era-pth:PantographHead]
      - [skos:prefLabel, $(ParameterValue)]
      - [era:tsiCompliant, "true", xsd:boolean]
  
  other-pantograph-heads-rinf:
    sources:
      - access: *hostRinf
        type: *typeMSSQL
        credentials: *credentialsRinf
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT CONCAT((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), TrackParameters.Value, '') AS ParameterValue, REPLACE(CONCAT((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), TrackParameters.Value, ''), ' ', '_') AS UriName FROM RINF.dbo.TrackParameters, RINF.dbo.Parameters, RINF.dbo.SOLTracks, RINF.dbo.SectionOfLines WHERE SOLTracks.TrackID = TrackParameters.TrackID AND TrackParameters.ParameterId = Parameters.ID AND (TrackParameters.[Value] IS NOT NULL OR TrackParameters.LookupValueID IS NOT NULL) AND "Index" IN ('1.1.1.2.3.2') AND SOLTracks.SectionOfLineID = SectionOfLines.ID AND SOLTracks.VersionID = SectionOfLines.VersionID;
    s: era-pth:$(UriName)
    po:
      - [a, era-pth:PantographHead]
      - [skos:prefLabel, $(ParameterValue)]
      - [era:tsiCompliant, "false", xsd:boolean]
  
  contact-strip-materials-eratv:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE(LOWER((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.10'));
    s: http://era.europa.eu/concepts/contact-strip-materials#$(ParameterURI)
    po:
      - p: a 
        o: era-csm:ContactStripMaterial
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
      - p: skos:prefLabel
        o: $(ParameterValue)
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
  
  contact-strip-materials-rinf:
    sources:
      - access: *hostRinf
        type: *typeMSSQL
        credentials: *credentialsRinf
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID) AS ParameterValue, REPLACE((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), ' ', '_') AS ParameterURI FROM RINF.dbo.TrackParameters, RINF.dbo.Parameters, RINF.dbo.SOLTracks, RINF.dbo.SectionOfLines WHERE SOLTracks.TrackID = TrackParameters.TrackID AND TrackParameters.ParameterId = Parameters.ID AND (TrackParameters.[Value] IS NOT NULL OR TrackParameters.LookupValueID IS NOT NULL) AND "Index" IN ('1.1.1.2.3.4') AND SOLTracks.SectionOfLineID = SectionOfLines.ID AND SOLTracks.VersionID = SectionOfLines.VersionID;
    s: http://era.europa.eu/concepts/contact-strip-materials#$(ParameterURI)
    po:
      - p: a 
        o: era-csm:ContactStripMaterial
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "other"]
      - p: skos:prefLabel
        o: $(ParameterValue)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "other"]
      
  other-contact-strip-materials-eratv:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.10'));
    s: http://era.europa.eu/concepts/contact-strip-materials#$(OtherURI)
    po:
      - [a, era-csm:ContactStripMaterial]
      - p: skos:prefLabel
        o: $(OtherValue)
        condition:
          function: idlab-fn:notEqual
          parameters:
              - [grel:valueParameter, $(OtherValue)]
              - [grel:valueParameter2, ""]
  
  platform-heights-eratv:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT SUBSTRING(TRIM((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 1, 3) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.12.3.1'));
    s: http://era.europa.eu/concepts/platform-heights#$(ParameterValue)
    po:
      - p: a 
        o: era-ph:PlatformHeight
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
      - p: skos:prefLabel
        o: $(ParameterValue)
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]

  platform-heights-rinf:
    sources:
      - access: *hostRinf
        type: *typeMSSQL
        credentials: *credentialsRinf
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT LookupValues.[Value] AS ParameterValue FROM RINF.dbo.Parameters, RINF.dbo.PlatformParameters, RINF.dbo.LookupValues WHERE PlatformParameters.ParameterID = Parameters.ID AND PlatformParameters.LookupValueID = LookupValues.ID AND Parameters.[Index] IN ('1.2.1.0.6.5');
    s: http://era.europa.eu/concepts/platform-heights#$(ParameterValue)
    po:
      - p: a 
        o: era-ph:PlatformHeight
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "other"]
      - p: skos:prefLabel
        o: $(ParameterValue)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "other"]
  
  other-platform-heights-eratv:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT SUBSTRING(TRIM((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 1, 3) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.12.3.1'));
    s: http://era.europa.eu/concepts/platform-heights#$(OtherURI)
    po:
      - [a, era-ph:PlatformHeight]
      - p: skos:prefLabel
        o: $(OtherValue)
        condition:
          function: idlab-fn:notEqual
          parameters:
              - [grel:valueParameter, $(OtherValue)]
              - [grel:valueParameter2, ""]
  
  gsm-r-networks:
    sources:
      - access: *hostRinf
        type: *typeMSSQL
        credentials: *credentialsRinf
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT CONCAT((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), TrackParameters.Value, '') AS ParameterValue, REPLACE(CONCAT((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), TrackParameters.Value, ''), ' ', '_') AS ParameterURI FROM RINF.dbo.TrackParameters, RINF.dbo.Parameters, RINF.dbo.SOLTracks, RINF.dbo.SectionOfLines WHERE SOLTracks.TrackID = TrackParameters.TrackID AND TrackParameters.ParameterId = Parameters.ID AND (TrackParameters.[Value] IS NOT NULL OR TrackParameters.LookupValueID IS NOT NULL) AND "Index" IN ('1.1.1.3.3.5') AND SOLTracks.SectionOfLineID = SectionOfLines.ID AND SOLTracks.VersionID = SectionOfLines.VersionID;
    s: http://era.europa.eu/concepts/gsmr-networks#$(ParameterURI)
    po:
      - [a, era-gsmr:GSMRNetwork]
      - [skos:prefLabel, $(ParameterValue)]
  
  train-protection-legacy-systems-rinf:
    sources:
      - access: *hostRinf
        type: *typeMSSQL
        credentials: *credentialsRinf
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT CONCAT((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), TrackParameters.Value, '') AS ParameterValue, REPLACE(CONCAT((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), TrackParameters.Value, ''), ' ', '_') AS ParameterURI FROM RINF.dbo.TrackParameters, RINF.dbo.Parameters, RINF.dbo.SOLTracks, RINF.dbo.SectionOfLines WHERE SOLTracks.TrackID = TrackParameters.TrackID AND TrackParameters.ParameterId = Parameters.ID AND (TrackParameters.[Value] IS NOT NULL OR TrackParameters.LookupValueID IS NOT NULL) AND "Index" IN ('1.1.1.3.5.3') AND SOLTracks.SectionOfLineID = SectionOfLines.ID AND SOLTracks.VersionID = SectionOfLines.VersionID;
    s: http://era.europa.eu/concepts/train-protection-legacy-systems#$(ParameterURI)
    po:
      - [a, era-tpls:TrainProtectionLegacySystem]
      - [skos:prefLabel, $(ParameterValue)]
  
  train-protection-legacy-systems-eratv:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.5'));
    s: http://era.europa.eu/concepts/train-protection-legacy-systems#$(ParameterURI)
    po:
      - p: a 
        o: era-tpls:TrainProtectionLegacySystem
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
      - p: skos:prefLabel
        o: $(ParameterValue)
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
    
  other-train-protection-legacy-systems:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.5'));
    s: http://era.europa.eu/concepts/train-protection-legacy-systems#$(OtherURI)
    po:
      - [a, era-tpls:TrainProtectionLegacySystem]
      - p: skos:prefLabel
        o: $(OtherValue)
        condition:
          function: idlab-fn:notEqual
          parameters:
              - [grel:valueParameter, $(OtherValue)]
              - [grel:valueParameter2, ""]
  
  legacy-radio-systems-rinf:
    sources:
      - access: *hostRinf
        type: *typeMSSQL
        credentials: *credentialsRinf
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT CONCAT((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), TrackParameters.Value, '') AS ParameterValue, REPLACE(CONCAT((SELECT LookupValues.[Value] FROM RINF.dbo.LookupValues WHERE LookupValues.ID = TrackParameters.LookupValueID), TrackParameters.Value, ''), ' ', '_') AS ParameterURI FROM RINF.dbo.TrackParameters, RINF.dbo.Parameters, RINF.dbo.SOLTracks, RINF.dbo.SectionOfLines WHERE SOLTracks.TrackID = TrackParameters.TrackID AND TrackParameters.ParameterId = Parameters.ID AND (TrackParameters.[Value] IS NOT NULL OR TrackParameters.LookupValueID IS NOT NULL) AND "Index" IN ('1.1.1.3.6.1') AND SOLTracks.SectionOfLineID = SectionOfLines.ID AND SOLTracks.VersionID = SectionOfLines.VersionID;
    s: http://era.europa.eu/concepts/legacy-radio-systems#$(ParameterURI)
    po:
      - p: a 
        o: era-lrs:LegacyRadioSystem
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterURI)]
            - [grel:valueParameter2, "Analogue_Radio_Germany_-_UIC_751"]
      - p: a 
        o: era-lrs:LegacyRadioSystem
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterURI)]
            - [grel:valueParameter2, "RETB_(voice)"]
      - p: skos:prefLabel 
        o: $(ParameterValue)
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterURI)]
            - [grel:valueParameter2, "Analogue_Radio_Germany_-_UIC_751"]
      - p: skos:prefLabel 
        o: $(ParameterValue)
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterURI)]
            - [grel:valueParameter2, "RETB_(voice)"]
  
  legacy-radio-systems-eratv:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.3'));
    s: http://era.europa.eu/concepts/legacy-radio-systems#$(ParameterURI)
    po:
      - p: a 
        o: era-lrs:LegacyRadioSystem
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
      - p: skos:prefLabel
        o: $(ParameterValue)
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherValue)]
            - [grel:valueParameter2, ""]
    
  other-legacy-radio-systems:
    sources:
      - access: *hostEratv
        type: *typeMSSQL
        credentials: *credentialsEratv
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT DISTINCT (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.5'));
    s: http://era.europa.eu/concepts/legacy-radio-systems#$(OtherURI)
    po:
      - [a, era-lrs:LegacyRadioSystem]
      - p: skos:prefLabel
        o: $(OtherValue)
        condition:
          function: idlab-fn:notEqual
          parameters:
              - [grel:valueParameter, $(OtherValue)]
              - [grel:valueParameter2, ""]