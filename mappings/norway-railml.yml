prefixes:
  idlab-fn: "http://example.com/idlab/function/"
  grel: "http://users.ugent.be/~bjdmeest/function/grel.ttl#"
  rdfs: "http://www.w3.org/2000/01/rdf-schema#"
  era: "http://era.europa.eu/ns#"
  xsd: "http://www.w3.org/2001/XMLSchema#"
  era-nv: "http://era.europa.eu/concepts/navigabilities#"

variables:
  connection: 
    access: &host //10.10.160.21:1433
    type: &typeMSSQL mssql
    credentials: &credentials
      username: SA
      password: ChooChoo2020
    queryFormulation: &queryFormulation sql2008 
    referenceFormulation: &referenceFormulation csv

mappings:
  # ------------Link RINF operational points to RailML Meso NetElements related to operational points--------------

  rinf-operational-points: # NOTE: RINF query is restricted to Norwegian operational points only.
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT TRIM(UOPID) AS UOPID, CONCAT(LineReferences.Kilometer * 1000, '.0') AS Kilometer FROM RINF.dbo.OperationalPoints, RINF.dbo.LineReferences, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE OperationalPoints.ID = LineReferences.OperationalPointId AND OperationalPoints.VersionID = LineReferences.VersionID AND OperationalPoints.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND MemberStates.Code = 'NO';
    s: http://era.europa.eu/functionalInfrastructure/operationalPoints#$(UOPID)
    po:
      - p: era:hasAbstraction
        o: 
          - mapping: railml-meso-net-elements
            condition:
              function: idlab-fn:equal
              parameters:
                - [grel:valueParameter, $(Kilometer), s]
                - [grel:valueParameter2, "$(ancestor::infrastructure//operationalPoint[./areaLocation/associatedNetElement/@netElementRef=current(\\)/@id]/spotLocation/linearCoordinate/@measure)", o]


  # ------------Define Meso NetElements and link back to RINF Operational Points and SOLTracks--------------
  
  railml-meso-net-elements:
    source:
      - [data/norway-railml/RUB.railml~xpath, "//netElement[not(@length)]"]
    s: 
      function: grel:array_join
      parameters:
        - [grel:p_array_a, "http://era.europa.eu/topology/netElements#"]
        - [grel:p_array_a, "$(name/@name)"]
        - [grel:p_array_a, "$(@id)"]
    po:
      - [a, era:NetElement]
      - [rdfs:label, $(name/@name)]
      - p: era:hasImplementation
        o: 
          - mapping: rinf-operational-points
            condition:
              function: idlab-fn:equal
              parameters:
                - [grel:valueParameter, "$(ancestor::infrastructure//operationalPoint[./areaLocation/associatedNetElement/@netElementRef=current(\\)/@id]/spotLocation/linearCoordinate/@measure)", s]
                - [grel:valueParameter2, $(Kilometer), o]
  
  
  # ------------Define Meso NetRelations--------------
  
  railml-meso-net-relations:
    source:
      - [data/norway-railml/RUB.railml~xpath, "//netRelation[not(@navigability)]"]
    s:
      function: grel:array_join
      parameters:
        - [grel:p_array_a, "http://era.europa.eu/topology/netRelations#"]
        - [grel:p_array_a, "$((ancestor::topology//netElement[@id=current(\\)/elementA/@ref]\\)/name/@name)"]
        - [grel:p_array_a, "$(elementA/@ref)"]
        - [grel:p_array_a, "$((ancestor::topology//netElement[@id=current(\\)/elementB/@ref]\\)/name/@name)"]
        - [grel:p_array_a, "$(elementB/@ref)"]
    po:
      - [a, era:NetRelation]
      - p: era:elementA
        o:
          function: grel:array_join
          parameters:
            - [grel:p_array_a, "http://era.europa.eu/topology/netElements#"]
            - [grel:p_array_a, "$((ancestor::topology//netElement[@id=current(\\)/elementA/@ref]\\)/name/@name)"]
            - [grel:p_array_a, "$(elementA/@ref)"]
          type: iri
      - p: era:elementB
        o:
          function: grel:array_join
          parameters:
            - [grel:p_array_a, "http://era.europa.eu/topology/netElements#"]
            - [grel:p_array_a, "$((ancestor::topology//netElement[@id=current(\\)/elementB/@ref]\\)/name/@name)"]
            - [grel:p_array_a, "$(elementB/@ref)"]
          type: iri


  # ------------Define Micro NetElements--------------

  railml-micro-net-elements:
    sources:
      - [data/norway-railml/RUB.railml~xpath, "//netElement[@length]"]
    s:
      function: grel:array_join
      parameters:
        - [grel:p_array_a, "http://era.europa.eu/topology/netElements#"]
        - [grel:p_array_a, "$((ancestor::netElements//elementCollectionUnordered/elementPart[@ref=current(\\)/@id]\\)/../../name/@name)"]
        - [grel:p_array_a, $(@id)]
    po:
      - [a, era:NetElement]
      - [era:length, $(@length), xsd:double]
      - [era:startKilometerPoint, "$(associatedPositioningSystem/intrinsicCoordinate[@intrinsicCoord='0.0']/linearCoordinate/@measure)", xsd:double]
      - [era:endKilometerPoint, "$(associatedPositioningSystem/intrinsicCoordinate[@intrinsicCoord='1.0']/linearCoordinate/@measure)", xsd:double]
      - p: era:hasSignal
        o:
          - mapping: railml-infrastructure-signals
            condition:
              function: idlab-fn:equal
              parameters:
                - [grel:valueParameter, $(@id), s]
                - [grel:valueParameter2, $(spotLocation/@netElementRef), o]


  # ------------Define Micro NetRelations--------------

  railml-micro-net-relations:
    sources:
      - [data/norway-railml/RUB.railml~xpath, "//netRelation[@navigability]"]
    s:
      function: grel:array_join
      parameters:
        - [grel:p_array_a, "http://era.europa.eu/topology/netRelations#"]
        - [grel:p_array_a, "$((ancestor::topology//elementCollectionUnordered/elementPart[@ref=current(\\)/elementA/@ref]\\)/../../name/@name)"]
        - [grel:p_array_a, "$(elementA/@ref)"]
        - [grel:p_array_a, "$((ancestor::topology//elementCollectionUnordered/elementPart[@ref=current(\\)/elementB/@ref]\\)/../../name/@name)"]
        - [grel:p_array_a, "$(elementB/@ref)"]
    po:
      - [a, era:NetRelation]
      - [era:navigability, era-nv:$(@navigability)~iri]
      - p: era:elementA
        o:
          function: grel:array_join
          parameters:
            - [grel:p_array_a, "http://era.europa.eu/topology/netElements#"]
            - [grel:p_array_a, "$((ancestor::topology//elementCollectionUnordered/elementPart[@ref=current(\\)/elementA/@ref]\\)/../../name/@name)"]
            - [grel:p_array_a, "$(elementA/@ref)"]
          type: iri
      - p: era:elementB
        o:
          function: grel:array_join
          parameters:
            - [grel:p_array_a, "http://era.europa.eu/topology/netElements#"]
            - [grel:p_array_a, "$((ancestor::topology//elementCollectionUnordered/elementPart[@ref=current(\\)/elementB/@ref]\\)/../../name/@name)"]
            - [grel:p_array_a, "$(elementB/@ref)"]
          type: iri

  # ------------Define which Micro NetElements belong inside Meso NetElements--------------

  railml-aggregations: 
    sources:
      - [data/norway-railml/RUB.railml~xpath, "//elementCollectionUnordered/elementPart"]
    s:
      function: grel:array_join
      parameters:
        - [grel:p_array_a, "http://era.europa.eu/topology/netElements#"]
        - [grel:p_array_a, "$(ancestor::netElement/name/@name)"]
        - [grel:p_array_a, "$(ancestor::netElement/@id)"]
    po:
      - p: era:elementPart
        o: 
          function: grel:array_join
          parameters:
            - [grel:p_array_a, "http://era.europa.eu/topology/netElements#"]
            - [grel:p_array_a, "$(ancestor::netElements/netElement[./elementCollectionUnordered/elementPart/@ref=current(\\)/@ref]/name/@name)"]
            - [grel:p_array_a, "$(@ref)"]
          type: iri

  # ------------Define <signalIS>s and link to correspondent micro <netElement>s--------------

  railml-infrastructure-signals:
    sources:
      - [data/norway-railml/RUB.railml~xpath, "//signalIS"]
    s: "http://era.europa.eu/functionalInfrastructure/signals#$(ancestor::infrastructure//netElement[@id=current(\\)/spotLocation/@netElementRef]/@id)$(name/@name)"
    po:
      - [a, era:Signal]
      - [rdfs:label, $(name/@name)]
      - [era:isSwitchable, $(@isSwitchable), xsd:boolean]
      - [era:relativePosition, $(spotLocation/@pos), xsd:double]
      - [era:kilometerPoint, $(spotLocation/linearCoordinate/@measure), xsd:double]
      - p: era:netElementRef
        o:
          - mapping: railml-micro-net-elements
            condition:
              function: idlab-fn:equal
              parameters:
                - [grel:valueParameter, $(spotLocation/@netElementRef), s]
                - [grel:valueParameter2, $(@id), o]

  ############## TODO:

  # ------------Link RINF SOLTracks to RailML Micro NetElements related to section of line tracks--------------

  rinf-sol-tracks: # NOTE: RINF query is restricted to Norwegian tracks only.
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT (SELECT TRIM(UOPID) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE OperationalPointID=OperationalPoints.ID AND LineNodes.ID=LineEdges.LineNodeStartID AND OperationalPoints.VersionID=LineNodes.VersionID) AS FROM_NODE, (SELECT CONCAT(LineReferences.Kilometer * 1000, '.0') FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes, RINF.dbo.LineReferences WHERE LineNodes.OperationalPointID=OperationalPoints.ID AND OperationalPoints.ID = LineReferences.OperationalPointId AND OperationalPoints.VersionID = LineReferences.VersionID AND LineNodes.ID=LineEdges.LineNodeStartID AND OperationalPoints.VersionID=LineNodes.VersionID) AS FROM_KM, Tracks.UUID, (SELECT CONCAT(LineReferences.Kilometer * 1000, '.0') FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes, RINF.dbo.LineReferences WHERE LineNodes.OperationalPointID=OperationalPoints.ID AND OperationalPoints.ID = LineReferences.OperationalPointId AND OperationalPoints.VersionID = LineReferences.VersionID AND LineNodes.ID=LineEdges.LineNodeEndID AND OperationalPoints.VersionID=LineNodes.VersionID) AS TO_KM, (SELECT TRIM(UOPID) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE OperationalPointID=OperationalPoints.ID AND LineNodes.ID=LineEdges.LineNodeEndID AND OperationalPoints.VersionID=LineNodes.VersionID) AS TO_NODE, LookupValues.[Value] AS Direction, SectionOfLines.Length FROM RINF.dbo.LineEdges, RINF.dbo.SOLTracks, RINF.dbo.SectionOfLines, RINF.dbo.Tracks, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates, RINF.dbo.LookupValues WHERE LineEdges.ID = SectionOfLines.LineEdgeID AND LineEdges.VersionID = SectionOfLines.VersionID AND SOLTracks.SectionOfLineID = SectionOfLines.ID AND SOLTracks.VersionID = SectionOfLines.VersionID AND SOLTracks.TrackID = Tracks.ID AND SOLTracks.VersionID = Tracks.VersionID AND SOLTracks.Direction = LookupValues.ID AND Tracks.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND MemberStates.Code = 'NO';
    s: http://era.europa.eu/functionalInfrastructure/tracks#$(FROM_NODE)_$(UUID)_$(TO_NODE)
    po:
      #- p: era:hasAbstraction
      #  o:
      #    - mapping: railml-meso-net-elements
      #      condition:
      #        - function: idlab-fn:equal
      #          parameters:
      #            - [grel:valueParameter, $(FROM_KM), s]
      #            - [grel:valueParameter2, "$(ancestor::infrastructure//operationalPoint[./areaLocation/associatedNetElement/@netElementRef=current(\\)/ancestor::topology//netRelation[./elementA/@ref=current(\\)/@id]/elementB/@ref]/spotLocation/linearCoordinate/@measure)", o]
      #        - function: idlab-fn:equal
      #          parameters:
      #            - [grel:valueParameter, $(TO_KM), s]
      #            - [grel:valueParameter2, "$(ancestor::infrastructure//operationalPoint[./areaLocation/associatedNetElement/@netElementRef=current(\\)/ancestor::topology//netRelation[./elementA/@ref=current(\\)/@id]/elementB/@ref]/spotLocation/linearCoordinate/@measure)", o]
  

  # ------------Link NetElements across RailML files via <border> elements --------------

  # ------------Define <stopLocation>s and link to correspondent micro <netElement>s--------------

  # ------------Define <switchIS>s and link to correspondent micro <netElement>s--------------