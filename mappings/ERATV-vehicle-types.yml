prefixes:
  xsd: "http://www.w3.org/2001/XMLSchema#"
  idlab-fn: "http://example.com/idlab/function/"
  grel: "http://users.ugent.be/~bjdmeest/function/grel.ttl#"
  rdfs: "http://www.w3.org/2000/01/rdf-schema#"
  eu-country: "http://publications.europa.eu/resource/authority/country/"
  era: "http://era.europa.eu/ns#"
  era-vehicle-types: "http://era.europa.eu/concepts/vehicle-types#"
  era-manufacturers: "http://era.europa.eu/manufacturers#"
  era-gaugings: "http://era.europa.eu/concepts/gaugings#"
  era-ap: "http://era.europa.eu/concepts/axle-positions#"
  era-am: "http://era.europa.eu/concepts/axle-monitoring#"
  era-mscd: "http://era.europa.eu/concepts/max-speed-cant-deficiency#"
  era-tds: "http://era.europa.eu/concepts/train-detection#"
  era-ri: "http://era.europa.eu/concepts/rail-inclinations#"
  era-gcf: "http://era.europa.eu/concepts/gauge-changeover-facilities#"
  era-ebp: "http://era.europa.eu/concepts/emergency-braking-profiles#"
  era-bwp: "http://era.europa.eu/concepts/brake-weight-percentages#"
  era-ess: "http://era.europa.eu/concepts/energy-supply-systems#"
  era-tc: "http://era.europa.eu/concepts/thermal-capacity#"
  era-ic: "http://era.europa.eu/concepts/ice-conditions#"
  era-csm: "http://era.europa.eu/concepts/contact-strip-materials#"
  era-rsf: "http://era.europa.eu/concepts/rolling-stock-fire#"
  era-ph: "http://era.europa.eu/concepts/platform-heights#"
  era-esc: "http://era.europa.eu/concepts/etcs-system-compatibilities#"
  era-gsmr: "http://era.europa.eu/concepts/gsmr-networks#"
  era-rsc: "http://era.europa.eu/concepts/radio-system-compatibilities#"
  era-tpls: "http://era.europa.eu/concepts/train-protection-legacy-systems#"
  era-lrs: "http://era.europa.eu/concepts/legacy-radio-systems#"
variables:
  connection: 
    access: &host ${ERATV_HOST}
    type: &typeMSSQL mssql
    credentials: &credentials
      username: ${ERATV_USER}
      password: ${ERATV_PWD}
    queryFormulation: &queryFormulation sql2008 
    referenceFormulation: &referenceFormulation csv

mappings:
  vehicles-types:
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, VehicleTypes.TypeName, VehicleTypes.AlternativeTypeName, Categories.Code AS CategoryCode, Categories.Name AS Category, SubCategories.Code AS SubCategoryCode, SubCategories.Name AS SubCategory, Countries.Name AS Country, Countries.Code AS CountryCode, Manufacturers.Name AS Manufacturer FROM ERATV.dbo.VehicleTypes, ERATV.dbo.Categories, ERATV.dbo.SubCategories, ERATV.dbo.Countries, ERATV.dbo.Manufacturers WHERE VehicleTypes.CategoriesId = Categories.Id AND VehicleTypes.SubCategoriesId = SubCategories.Id AND VehicleTypes.CountriesId = Countries.Id AND VehicleTypes.ManufacturersId = Manufacturers.Id AND VehicleTypes.TypeVersionNumber IS NOT NULL AND VehicleTypes.TypeVersionNumber != '';
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [a, era:VehicleType]
      - [era:manufacturer, era-manufacturers:$(Manufacturer)~iri]
      - [era:typeVersionNumber, $(TypeVersionNumber)]
      - p: rdfs:label
        o: $(TypeName)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(TypeName)]
            - [grel:valueParameter2, ""]
      - p: era:manufacturingCountry
        o:
          - mapping: eu-country
            condition:
              function: equal
              parameters:
                - [str1, $(CountryCode)]
                - [str2, $(code)]
      - p: era:alternativeName
        o: $(AlternativeTypeName)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(AlternativeTypeName)]
            - [grel:valueParameter2, ""]
      - p: era:category
        o: era-vehicle-types:tractionVehicles~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(CategoryCode)]
            - [grel:valueParameter2, "11"]
      - p: era:category
        o: era-vehicle-types:hauledPassenger~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(CategoryCode)]
            - [grel:valueParameter2, "31"]
      - p: era:category
        o: era-vehicle-types:freightWagons~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(CategoryCode)]
            - [grel:valueParameter2, "51"]
      - p: era:category
        o: era-vehicle-types:specialVehicles~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(CategoryCode)]
            - [grel:valueParameter2, "71"]
      - p: era:subCategory
        o: era-vehicle-types:locomotive~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "11"]
      - p: era:subCategory
        o: era-vehicle-types:passengerTrainset~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "13"]
      - p: era:subCategory
        o: era-vehicle-types:freightTrainset~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "15"]
      - p: era:subCategory
        o: era-vehicle-types:shunter~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "17"]
      - p: era:subCategory
        o: era-vehicle-types:otherTractionVehicles~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "19"]
      - p: era:subCategory
        o: era-vehicle-types:passengerCoach~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "31"]
      - p: era:subCategory
        o: era-vehicle-types:van~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "33"]
      - p: era:subCategory
        o: era-vehicle-types:carCarrier~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "35"]
      - p: era:subCategory
        o: era-vehicle-types:serviceVehicle~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "37"]
      - p: era:subCategory
        o: era-vehicle-types:coachesRake~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "39"]
      - p: era:subCategory
        o: era-vehicle-types:otherHauledPassenger~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "41"]
      - p: era:subCategory
        o: era-vehicle-types:freightWagon~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "51"]
      - p: era:subCategory
        o: era-vehicle-types:freightWagonsRake~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "53"]
      - p: era:subCategory
        o: era-vehicle-types:selfPropelledSpecialVehicle~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "71"]
      - p: era:subCategory
        o: era-vehicle-types:hauledSpecialVehicle~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(SubCategoryCode)]
            - [grel:valueParameter2, "73"]
  
  authorized-countries:
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, Countries.Code FROM ERATV.dbo.VehicleTypes, ERATV.dbo.Authorisations, ERATV.dbo.AuthorisationMemberStates, ERATV.dbo.Countries WHERE VehicleTypes.Id = Authorisations.VehicleTypeId AND Authorisations.Id = AuthorisationMemberStates.AuthorisationId AND AuthorisationMemberStates.CountryId = Countries.Id;
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:authorizedCountry
        o:
          - mapping: eu-country
            condition:
              function: equal
              parameters:
                - [str1, $(Code)]
                - [str2, $(code)]

  eu-country:
    sources:
      - ["data/countries.csv~csv"]
    s: $(eu)
  
  # ------------Traffic loads and load carrying capacity of infrastructure--------------

  static-axle-load-in-working-order: # 4.5.3.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.3.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:staticAxleLoadWorkingOrder, $(ParameterValue), xsd:double]

  static-axle-load-under-normal-payload: # 4.5.3.2
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.3.2'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:staticAxleLoadNormalPayload, $(ParameterValue), xsd:double]

  static-axle-load-under-exceptional-payload: # 4.5.3.3
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.3.3'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:staticAxleLoadExceptionalPayload, $(ParameterValue), xsd:double]

  design-mass-in-working-order: # 4.5.2.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.2.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:designMassWorkingOrder, $(ParameterValue), xsd:integer]

  design-mass-under-normal-payload: # 4.5.2.2
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.2.2'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:designMassNormalPayload, $(ParameterValue), xsd:integer]

  design-mass-under-exceptional-payload: # 4.5.2.3
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.2.3'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:designMassExceptionalPayload, $(ParameterValue), xsd:integer]

  maximum-design-speed: # 4.1.2.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.2.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:maximumDesignSpeed, $(ParameterValue), xsd:integer]

  vehicle-length: # 4.8.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.8.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:vehicleLength, $(ParameterValue), xsd:double]

  axle-spacing: # 4.5.3.4
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, REPLACE(RegistrationParameters.Value, ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.5.3.4'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:axleSpacing, era-ap:$(ParameterURI)~iri]

  permissible-payload: # 4.5.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND RegistrationParameters.Value != '' AND (Parameters.Code IN ('4.5.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:permissiblePayload, $(ParameterValue)]
  
  # -----------------Gauging--------------------

  vehicle-gauge: # 4.2.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.2.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:gaugingProfile
        o: era-gaugings:$(ParameterURI)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]
      - p: era:gaugingProfile
        o: era-gaugings:$(OtherURI)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]

  # -----------------Vertical radius--------------------

  minimum-vertical-convex-radius: # 4.8.5
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.8.5'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:minimumConvexVerticalRadius, $(ParameterValue), xsd:integer]

  minimum-vertical-concave-radius: # 4.8.6
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.8.6'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:minimumConcaveVerticalRadius, $(ParameterValue), xsd:integer]

  # -----------------Train detection systems--------------------

  train-detection-system-type: # 4.14.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, REPLACE(LOWER(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId))), ' ', '') AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.14.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:trainDetectionSystem
        o: era-tds:track_circuit~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "trackcircuits"]
      - p: era:trainDetectionSystem
        o: era-tds:wheel_detector~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "axlecounters"]
      - p: era:trainDetectionSystem
        o: era-tds:loop~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "loops"]

  # -----------------Hot axle box detection--------------------

  axle-bearing-condition-monitoring: # 4.9.2
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.9.2'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:axleBearingConditionMonitoring
        o: era-am:$(ParameterURI)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]
      - p: era:axleBearingConditionMonitoring
        o: era-am:$(OtherURI)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]

  # -----------------Running characteristics--------------------

  maximum-speed-and-cant-deficiency: # 4.6.4
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, REPLACE(RegistrationParameters.Value, ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.6.4'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:maximumSpeedAndCantDeficiency, era-mscd:$(ParameterURI)~iri]

  rail-inclination: # 4.6.5
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.6.5'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:railInclination
        o: era-ri:$(ParameterURI)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]
      - p: era:railInclination
        o: era-ri:$(OtherURI)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]

  # -----------------Wheelset--------------------

  wheelset-gauge: # 4.1.3
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, Parameters.Code, Parameters.Name AS ParameterName, REVERSE(SUBSTRING(REVERSE(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId))), 3, 10)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.3'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:wheelSetGauge, $(ParameterValue), xsd:integer]

  minimum-wheel-diameter: # 4.8.2
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.8.2'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:minimumWheelDiameter, $(ParameterValue), xsd:integer]
  
  wheelset-gauge-changeover-facility: # 4.1.11
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue, RegistrationParameters.OtherValue, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.1.11'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:wheelSetGaugeChangeoverFacility 
        o: era-gcf:$(ParameterURI)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]
      - p: era:wheelSetGaugeChangeoverFacility
        o: era-gcf:$(OtherURI)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]

  # -----------------Minimum curve--------------------

  minimum-horizontal-curve-radius: # 4.8.4
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.8.4'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:minimumHorizontalRadius, $(ParameterValue), xsd:integer]

  # -------------------Braking-----------------------

  emergency-braking: # 4.7.5
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, RegistrationParameters.Value AS ParameterValue, REPLACE(RegistrationParameters.Value, ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.5'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:emergencyBrake, era-ebp:$(ParameterURI)~iri]

  brake-weight-percentage: # 4.7.6
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, RegistrationParameters.Value AS ParameterValue, REPLACE(RegistrationParameters.Value, ' ', '_') AS ParameterURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.6'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:brakeWeightPercentage, era-bwp:$(ParameterURI)~iri]

  thermal-capacity-tsi-reference-case: # 4.7.2.1.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, REPLACE(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', '_') AS UriName FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.2.1.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:thermalCapacityTSIReference, era-tc:$(UriName)~iri]

  thermal-capacity-speed: # 4.7.2.1.2
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.2.1.2'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:thermalCapacitySpeed, $(ParameterValue), xsd:double]
  
  thermal-capacity-gradient: # 4.7.2.1.3
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.2.1.3'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:thermalCapacityGradient, $(ParameterValue), xsd:double]

  thermal-capacity-distance: # 4.7.2.1.4
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.2.1.4'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:thermalCapacityDistance, $(ParameterValue), xsd:double]
  
  thermal-capacity-time: # 4.7.2.1.5
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.2.1.5'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:thermalCapacityTime, $(ParameterValue), xsd:integer]
  
  parking-brake-maximum-gradient: # 4.7.3.3
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.3.3'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:parkingBrakeMaximumGradient, $(ParameterValue), xsd:double]
  
  # -------------------Magnetic track brake-----------------------

  magnetic-brake-fitted: # 4.7.4.2.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.4.2.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:magneticBraking
        o:
          value: "true"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "True"]
      - p: era:magneticBraking
        o:
          value: "false"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "False"]

  magnetic-brake-prevention: # 4.7.4.2.2
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.4.2.2'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:magneticBrakePrevention
        o:
          value: "true"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "True"]
      - p: era:magneticBrakePrevention
        o:
          value: "false"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "False"]
  
  # -------------------Eddy current track brake-----------------------

  eddy-current-brake-fitted: # 4.7.4.1.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.4.1.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:eddyCurrentBraking
        o:
          value: "true"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "True"]
      - p: era:eddyCurrentBraking
        o:
          value: "false"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "False"]

  eddy-current-brake-prevention: # 4.7.4.1.2
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.4.1.2'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:eddyCurrentBrakePrevention
        o:
          value: "true"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "True"]
      - p: era:eddyCurrentBrakePrevention
        o:
          value: "false"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "False"]
  
  # -------------------Weather conditions-----------------------

  temperature-range: # 4.3.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT * FROM (SELECT VehicleTypes.TypeVersionNumber, SUBSTRING(REPLACE(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', ''), PATINDEX('%-[0-9][0-9]%', REPLACE(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', '')), 3) AS MinimumTemperature, SUBSTRING(REPLACE(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', ''), PATINDEX('%+[0-9][0-9]%', REPLACE(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', '')) + 1, 2) AS MaximumTemperature FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.3.1'))) VirtualTable WHERE PATINDEX('%[0-9]%', MinimumTemperature) > 0;
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:minimumTemperature, $(MinimumTemperature), xsd:integer]
      - [era:maximumTemperature, $(MaximumTemperature), xsd:integer]
  
  snow-ice-hail-conditions: # 4.3.3
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.3.3'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:snowIceHailConditions 
        o: era-ic:$(ParameterURI)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]
      - p: era:snowIceHailConditions
        o: era-ic:$(OtherURI)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]

  # -------------------Voltages and frequencies-----------------------

  energy-supply-system: # 4.10.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:energySupplySystem 
        o: era-ess:$(ParameterURI)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]
      - p: era:energySupplySystem 
        o: era-ess:$(OtherURI)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]

  # -------------------Regenerative brake----------------------

  regenerative-brake-fitted: # 4.7.4.3.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.4.3.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:hasRegenerativeBrake
        o:
          value: "true"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "True"]
      - p: era:hasRegenerativeBrake
        o:
          value: "false"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "False"]

  prevent-regenerative-break: # 4.7.4.3.2
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.7.4.3.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:preventRegenerativeBrakeUse
        o:
          value: "true"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "True"]
      - p: era:preventRegenerativeBrakeUse
        o:
          value: "false"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "False"]

  # -------------------Current limitation----------------------

  current-limitation: # 4.10.14
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.14'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:hasCurrentLimitation
        o:
          value: "true"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "True"] 
      - p: era:hasCurrentLimitation
        o:
          value: "false"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "False"]
  
  # -------------------Pantograph----------------------

  maximum-current-standstill: # 4.10.4
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.4'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:maxCurrentStandstillPantograph, $(ParameterValue), xsd:double]

  wire-contact-height: # 4.10.5
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, MinimumHeight = CASE WHEN ISNUMERIC(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 0, 8)) = 1 THEN CASE WHEN CAST(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 0, 8) AS float) > 10 THEN CAST(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 0, 8) AS float) / 1000 ELSE CAST(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 0, 8) AS float) END ELSE NULL END, MaximumHeight = CASE WHEN ISNUMERIC(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 14, 8)) = 1 THEN CASE WHEN CAST(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 14, 8) AS float) > 10 THEN CAST(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 14, 8) AS float) / 1000 ELSE CAST(SUBSTRING(CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 14, 8) AS float) END ELSE NULL END FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.5'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:maximumContactWireHeight
        o: 
          value: $(MaximumHeight)
          datatype: xsd:double
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(MaximumHeight)]
            - [grel:valueParameter2, ""]
      - p: era:minimumContactWireHeight
        o: 
          value: $(MinimumHeight)
          datatype: xsd:double
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(MinimumHeight)]
            - [grel:valueParameter2, ""]

  pantograph-head: # 4.10.6
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.6'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:vehiclePantographHead, $(ParameterValue)]

  contact-strip-material: # 4.10.10
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, REPLACE(LOWER((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.10'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:contactStripMaterial
        o: era-csm:$(ParameterURI)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]
      - p: era:contactStripMaterial
        o: era-csm:$(OtherURI)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]

  contact-force: # 4.10.15
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.15'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:vehicleContactForce, $(ParameterValue), xsd:integer]

  pantograph-number: # 4.10.7
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.7'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:numberOfPantographsInContactWithOCL, $(ParameterValue), xsd:integer]
  
  shortest-distance-between-pantographs: # 4.10.8
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.8'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:shortestDistanceBetweenPantographsInContactWithOCL, $(ParameterValue), xsd:double]

  ocl-type: # 4.10.9
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.9'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:oclType, $(ParameterValue)]
  
  automatic-dropping-device-fitted: # 4.10.11
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.10.11'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:hasAutomaticDroppingDevice
        o:
          value: "true"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "True"]
      - p: era:hasAutomaticDroppingDevice
        o:
          value: "false"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "False"]
  
  # -------------------Tunnel----------------------

  fire-safety-category: # 4.4.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.4.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:fireSafetyCategory
        o: era-rsf:a~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "A"]
      - p: era:fireSafetyCategory
        o: era-rsf:b~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "B"]
      - p: era:fireSafetyCategory
        o: era-rsf:none~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "no category, acceptable in tunnels shorter then 1km"]
      - p: era:fireSafetyCategory
        o: era-rsf:otm~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "OTM as defined in 4.2.10.1.2"]
      - p: era:fireSafetyCategory
        o: era-rsf:srt-tsi~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "SRT TSI Freight Locomotive as defined in 4.2.10.1.2"]

  # -------------------Train length----------------------
  # 4.8.1 mapped among traffic load parameters

  # -----------Platform height and access and egress--------

  platform-height: # 4.12.3.1
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, SUBSTRING(TRIM((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)), 1, 3) AS ParameterValue, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.12.3.1'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:platformHeight 
        o: era-ph:$(ParameterValue)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]
      - p: era:platformHeight
        o: era-ph:$(OtherURI)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]

  # -----------------------ETCS--------------------------

  etcs-compatible: # 4.13.1.8
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.8'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:etcsSystemCompatibility 
        o: era-esc:$(ParameterValue)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "Not applicable"]

  
  train-integrity: # 4.13.1.9 not sure about this parameter
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.9'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:hasTrainIntegrityConfirmation
        o:
          value: "true"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "True"]
      - p: era:hasTrainIntegrityConfirmation
        o:
          value: "false"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "False"]
  # -----------------------GSM-R--------------------------

  voice-gsm-r-home-network: # 4.13.2.10
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.10'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:voiceGSMRNetwork, era-gsmr:$(ParameterValue)~iri]

  data-gsm-r-home-network: # 4.13.2.11
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.11'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - [era:dataGSMRNetwork, era-gsmr:$(ParameterValue)~iri]

  group-555-support: # 4.13.2.12
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, CONCAT(CONCAT(RegistrationParameters.Value, RegistrationParameters.OtherValue), (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId)) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.12'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:usesGroup555
        o:
          value: "true"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "True"]
      - p: era:usesGroup555
        o:
          value: "false"
          datatype: xsd:boolean
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "False"]

  voice-radio-compatible: # 4.13.2.5
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.5'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:voiceRadioCompatible
        o: era-rsc:$(ParameterValue)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "Not applicable"]
  
  data-radio-compatible: # 4.13.2.8
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, (SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId) AS ParameterValue FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.8'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:dataRadioCompatible
        o: era-rsc:$(ParameterValue)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(ParameterValue)]
            - [grel:valueParameter2, "Not applicable"]
  
  # -----------------------Class B--------------------------

  protection-legacy-system: # 4.13.1.5
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.1.5'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:protectionLegacySystem
        o: era-tpls:$(ParameterURI)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]
      - p: era:protectionLegacySystem
        o: era-tpls:$(OtherURI)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]

  radio-legacy-system: # 4.13.2.3
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT VehicleTypes.TypeVersionNumber, REPLACE((SELECT "Name" FROM ERATV.dbo.ReferenceListValues WHERE ReferenceListValues.ID=RegistrationParameters.ReferenceListValueId), ' ', '_') AS ParameterURI, REPLACE(RegistrationParameters.OtherValue, ' ', '_') AS OtherURI FROM ERATV.dbo.VehicleTypes, ERATV.dbo.RegistrationParameters, ERATV.dbo.Parameters WHERE VehicleTypes.ID = RegistrationParameters.VehicleTypesId AND RegistrationParameters.ParametersId = Parameters.ID AND (Parameters.Code IN ('4.13.2.3'));
    s: http://era.europa.eu/vehicleTypes#$(TypeVersionNumber)
    po:
      - p: era:legacyRadioSystem
        o: era-tpls:$(ParameterURI)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]
      - p: era:legacyRadioSystem
        o: era-tpls:$(OtherURI)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(OtherURI)]
            - [grel:valueParameter2, ""]

  