prefixes:
  idlab-fn: "http://example.com/idlab/function/"
  grel: "http://users.ugent.be/~bjdmeest/function/grel.ttl#"
  rdfs: "http://www.w3.org/2000/01/rdf-schema#"
  schema: "https://schema.org/"
  era: "http://data.europa.eu/949/"
  era-manufacturers: "http://data.europa.eu/949/manufacturers/"
  xsd: "http://www.w3.org/2001/XMLSchema#"
variables:
  connection: 
    access: &host ${ERATV_HOST}
    type: &typeMSSQL mssql
    credentials: &credentials
      username: ${ERATV_USER}
      password: ${ERATV_PWD}
    queryFormulation: &queryFormulation sql2008 
    referenceFormulation: &referenceFormulation csv

mappings:
  manufacturer:
    sources:
      - access: *host
        type: *typeMSSQL
        credentials: *credentials
        queryFormulation: *queryFormulation
        referenceFormulation: *referenceFormulation
        query: SELECT REPLACE(Manufacturers.Name, ' ', '') AS UriName, Manufacturers.Name, Manufacturers.EmailAddress, Manufacturers.PostAddress, Manufacturers.RegisteredBusinessNumber FROM ERATV.dbo.Manufacturers;
    s: era-manufacturers:$(UriName)
    po:
      - [a, era:Manufacturer]
      - [schema:name, $(Name)] # 1.3.1.1
      - [rdfs:label, $(Name)] # 1.3.1.1
      - p: schema:email # 1.3.2.5
        o: $(EmailAddress)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(EmailAddress)]
            - [grel:valueParameter2, ""]
      - p: schema:address # 1.3.2.1
        o: $(PostAddress)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(PostAddress)]
            - [grel:valueParameter2, ""]
      - p: schema:taxID # 1.3.1.2
        o: $(RegisteredBusinessNumber)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(RegisteredBusinessNumber)]
            - [grel:valueParameter2, ""]
    graph: ${NAMED_GRAPH}
